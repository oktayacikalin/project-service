#!/bin/bash

# Service control script for managing stuff around MySQL/MariaDB.
#
# @author    Oktay Acikalin <oktay.acikalin@gmail.com>
# @copyright Oktay Acikalin
# @license   MIT (LICENSE.txt)

[ -z "$SERVICE_DIR" ] && SERVICE_DIR=$(readlink -f $(dirname $0))
[ -z "$BASE_DIR" ] && . "${SERVICE_DIR}/service.conf"

[ -z "$MYSQL_HOST" ] && MYSQL_HOST="project.ld"
[ -z "$MYSQL_PORT" ] && MYSQL_PORT=4002
[ -z "$MYSQL_USER" ] && MYSQL_USER="root"
[ -z "$MYSQL_PASS" ] && MYSQL_PASS="root"
[ -z "$MYSQL_SOCKET" ] && MYSQL_SOCKET="${PID_DIR}/mysqld.sock"
[ -z "$MYSQL_PID" ] && MYSQL_PID="${PID_DIR}/mysqld.pid"
[ -z "$MYSQL_DATA_DIR" ] && MYSQL_DATA_DIR="${VAR_DIR}/lib/mysql"
[ -z "$MYSQL_ERROR_LOG" ] && MYSQL_ERROR_LOG="${LOG_DIR}/mysql-error.log"
[ -z "$MYSQL_CONF" ] && MYSQL_CONF="${MYSQL_DATA_DIR}/mysql.conf"
[ -z "$MYSQL_ADMIN_CONF" ] && MYSQL_ADMIN_CONF="${MYSQL_DATA_DIR}/mysql-admin.conf"

SERVICE_LOG_FILE="$MYSQL_ERROR_LOG"

mkdir -p "$(dirname ${MYSQL_SOCKET})"
mkdir -p "${MYSQL_DATA_DIR}"
mkdir -p "$(dirname ${MYSQL_ERROR_LOG})"

function fill () {
    local template=$1
    sed -e "s!\${MYSQL_HOST}!${MYSQL_HOST}!g" \
        -e "s!\${MYSQL_PORT}!${MYSQL_PORT}!g" \
        -e "s!\${MYSQL_USER}!${MYSQL_USER}!g" \
        -e "s!\${MYSQL_PASS}!${MYSQL_PASS}!g" \
        -e "s!\${MYSQL_SOCKET}!${MYSQL_SOCKET}!g" \
        -e "s!\${MYSQL_PID}!${MYSQL_PID}!g" \
        -e "s!\${MYSQL_DATA_DIR}!${MYSQL_DATA_DIR}!g" \
        -e "s!\${MYSQL_ERROR_LOG}!${MYSQL_ERROR_LOG}!g" \
        <<< "${template}"
}

[ -e "${MYSQL_CONF}" ] || fill "$(cat ${BASE_DIR}/etc/mysql/mysql.conf)" > ${MYSQL_CONF}
[ -e "${MYSQL_ADMIN_CONF}" ] || fill "$(cat ${BASE_DIR}/etc/mysql/mysql-admin.conf)" > ${MYSQL_ADMIN_CONF}

function wait () {
    while true; do
        [ -f "$MYSQL_PID" ] && {
            local pid=$(cat ${MYSQL_PID})
            local proc=$(ps xaww | grep -v grep | grep mysqld | grep ${pid})
            [ "$proc" ] && break
        }
        sleep 1
    done
}

case "$1" in
    'bootstrap')
        mysql_install_db --defaults-file="${MYSQL_CONF}"
        $0 start
        wait
        mysqladmin --defaults-file="${MYSQL_CONF}" -u "${MYSQL_USER}" password "${MYSQL_PASS}"
        # mysqladmin --defaults-file="${MYSQL_CONF}" -h localhost -u "${MYSQL_USER}" password "${MYSQL_PASS}"
    ;;

    'reconfigure')
        fill "$(cat ${BASE_DIR}/etc/mysql/mysql.conf)" > ${MYSQL_CONF}
        fill "$(cat ${BASE_DIR}/etc/mysql/mysql-admin.conf)" > ${MYSQL_ADMIN_CONF}
    ;;

    'start')
        start-stop-daemon --start --quiet --pidfile "$MYSQL_PID" --chdir "$BASE_DIR" --background --exec /usr/sbin/mysqld \
            --test \
            || exit 97
        start-stop-daemon --start --pidfile "$MYSQL_PID" --chdir "$BASE_DIR" --background --exec /usr/sbin/mysqld \
            -- --defaults-file="${MYSQL_CONF}"
    ;;

    'stop')
        start-stop-daemon --stop --pidfile "$MYSQL_PID" --retry 30
        RETVAL="$?"
        [ "$RETVAL" = 2 ] && exit 2
        [ "$RETVAL" = 1 ] && exit 98
        rm -f ${MYSQL_PID}
        exit "$RETVAL"
    ;;

    'restart')
        $0 stop
        RETVAL=$?
        if [ $RETVAL = 0 ] || [ $RETVAL = 98 ]; then
            $0 start
        else
            exit "$RETVAL"
        fi
    ;;

    'mysql-shell')
        echo  # Put the prompt into a new line.
        mysql --defaults-extra-file="${MYSQL_ADMIN_CONF}"
    ;;

    'mytop')
        mytop --socket="${MYSQL_SOCKET}"
    ;;

    'mysqltuner')
        mysqltuner --forcemem 8192 --forceswap 8192 --socket="${MYSQL_SOCKET}"
    ;;

    'NOOP')
        # NOOP
    ;;

    *)
        exit 99
    ;;
esac
