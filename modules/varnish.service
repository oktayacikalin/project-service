#!/bin/bash

# Service control script for managing stuff around Varnish cache.
#
# @author    Oktay Acikalin <oktay.acikalin@gmail.com>
# @copyright Oktay Acikalin
# @license   MIT (LICENSE.txt)

[ -z "$SERVICE_DIR" ] && SERVICE_DIR=$(readlink -f $(dirname $0))
[ -z "$BASE_DIR" ] && source "${SERVICE_DIR}/service.conf"

import "lib/service.run_main"
import "lib/var.default"

import "etc/default/varnish"

SERVICE_LOG_FILE="${LOG_DIR}/varnishd.log"

mkdir -p "${VARNISH_LIB}"


function main () {
    case "$COMMAND" in
        'disable-init-script')
            sudo sh -c 'echo "manual" > /etc/init/varnish.override'
        ;;

        'enable-init-script')
            sudo rm '/etc/init/varnish.override'
        ;;

        'start')
            [ -f "${VARNISH_PID}" ] && {
                running=$(ps aux | grep "$(cat "${VARNISH_PID}")" | grep -v grep)
                [ -n "$running" ] && exit 97
            } || {
                varnishd -P "${VARNISH_PID}" -f "${VARNISH_VCL}" -n "${VARNISH_LIB}" -s $VARNISH_MEM -a $VARNISH_HOST:$VARNISH_PORT -p ${VARNISH_PARAMS} >> "$SERVICE_LOG_FILE" 2>&1
            }
        ;;

        'stop')
            [ -f "${VARNISH_PID}" ] && {
                skill $(cat "${VARNISH_PID}")
                rm "${VARNISH_PID}"
            } || exit 98
        ;;

        'restart')
            $0 stop
            RETVAL=$?
            if [ $RETVAL = 0 ] || [ $RETVAL = 98 ]; then
                $0 start
            else
                exit "$RETVAL"
            fi
        ;;

        'clear-cache')
            # TODO flush varnish cache instead of restart.
            $0 restart
        ;;

        'NOOP')
            # NOOP
        ;;
    esac
}


service.run_main "$@"
